/*******************************
*
*         WiFi Module settings
*
********************************/

#include <PubSubClient.h>
#include <ESP8266WiFi.h>

#define MQTT_SERVER "192.168.43.40" 
const char* ssid  =  "Honor 8tp";
const char* password  =  "aarnonnetti";

char* Topic   =   "curtaincontrol";    //Topic to be subscribed

WiFiClient wifiClient;

void setup() {
  //initialize the serial
  Serial.begin(9600);
  delay(100);

  //Start wifi subsystem
  WiFi.begin(ssid, password);
  //attempt to connect to the WiFi network and then connect to the MQTT server
  reconnect();

  //wait a bit before starting the main loop
    delay(2000);
}

PubSubClient client(MQTT_SERVER, 1883, callback, wifiClient);

void loop() {

  //reconnect if connection is lost
  if(!client.connected() && WiFi.status()  ==  3) {reconnect();}
  
  //Maintain MQTT connection
  client.loop();
  
  //MUST delay to allow ESP8266 WiFi functions to run
  delay(20);
}

void callback(char* topic, byte* payload, unsigned int length)  {
  //convert topic to string to make it easier to work with
  String topicsStr  =  topic;

  //Print out some debugging info
  ////Serial.prinln("Callback update.");
  //Serial.print("Topic: ");
  //Serial.println(topicStr);

  //Send messages from MQTT to serial
  if (payload[0] == '0'){
    client.publish("curtainreceive", "Do nothing");
    Serial.println("0");
  }
  if (payload[0] == '1'){
    client.publish("curtainreceive", "Open the shades");
    Serial.println("1");
  }
  if (payload[0] == '2'){
    client.publish("curtainreceive", "Close the shades");
    Serial.println("2");
  }
  
}


void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Attempt to connect
    if (client.connect("arduinoClient")) {
      Serial.println("connected");
      // Once connected, publish an announcement...
      client.publish("curtainreceive","hello world");
      // ... and resubscribe
      client.subscribe("curtaincontrol");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}
